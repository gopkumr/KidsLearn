@inject IJSRuntime JS

<MudStack Row="true">
    <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
        <MudButton Size="Size.Small" EndIcon="@Icons.Material.Filled.PlayArrow" OnClick="@Speak">Speak</MudButton>
        <MudButton Size="Size.Small" EndIcon="@Icons.Material.Filled.Pause" OnClick="@Pause">Pause</MudButton>
        <MudMenu Size="Size.Medium" Label="Speed" Variant="Variant.Outlined" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary">
            <ActivatorContent>
                <MudButton Size="Size.Large" Class="p-3" EndIcon="@Icons.Material.Filled.Speed">Speed</MudButton>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem @onclick="()=>SelectSpeed(0.5)">
                    @if (speed == 0.5)
                    {
                        <MudIcon Icon="@Icons.Material.Filled.Check" Title="Tick" />
                    } 0.5
                </MudMenuItem>
                <MudMenuItem @onclick="()=>SelectSpeed(0.7)">
                    @if (speed == 0.7)
                    {
                        <MudIcon Icon="@Icons.Material.Filled.Check" Title="Tick" />
                    }
                    0.7
                </MudMenuItem>
                <MudMenuItem @onclick="()=>SelectSpeed(0.9)">
                    @if (speed == 0.9)
                    {
                        <MudIcon Icon="@Icons.Material.Filled.Check" Title="Tick" />
                    }
                    0.9
                </MudMenuItem>
                <MudMenuItem @onclick="()=>SelectSpeed(1.1)">
                    @if (speed == 1.1)
                    {
                        <MudIcon Icon="@Icons.Material.Filled.Check" Title="Tick" />
                    }
                    1.1
                </MudMenuItem>
                <MudMenuItem @onclick="()=>SelectSpeed(1.3)">
                    @if (speed == 1.3)
                    {
                        <MudIcon Icon="@Icons.Material.Filled.Check" Title="Tick" />
                    }
                    1.3
                </MudMenuItem>
                <MudMenuItem @onclick="()=>SelectSpeed(1.5)">
                    @if (speed == 1.5)
                    {
                        <MudIcon Icon="@Icons.Material.Filled.Check" Title="Tick" />
                    }
                    1.5
                </MudMenuItem>
                <MudMenuItem @onclick="()=>SelectSpeed(1.7)">
                    @if (speed == 1.7)
                    {
                        <MudIcon Icon="@Icons.Material.Filled.Check" Title="Tick" />
                    }
                    1.7
                </MudMenuItem>
                <MudMenuItem @onclick="()=>SelectSpeed(2.0)">
                    @if (speed == 2.0)
                    {
                        <MudIcon Icon="@Icons.Material.Filled.Check" Title="Tick" />
                    }
                    2.0
                </MudMenuItem>
            </ChildContent>
        </MudMenu>
    </MudButtonGroup>
</MudStack>


@code {

    double speed = 1.1;

    [Parameter]
    public string TextToSpeak { get; set; } = string.Empty;

    [Parameter]
    public bool SpeakOnLoad { get; set; } = false;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (SpeakOnLoad && firstRender)
        {
            Speak();
        }
    }

    private async Task Speak()
    {
        await JS.InvokeVoidAsync("speakText", TextToSpeak, speed);

    }

    private async Task Stop()
    {
        await JS.InvokeVoidAsync("stopSpeaking");

    }

    private async Task Pause()
    {
        await JS.InvokeVoidAsync("pauseSpeaking");

    }

    private void SelectSpeed(double selectedSpeed)
    {
        speed = selectedSpeed;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeAsync<IJSObjectReference>("import", "./Pages/Dictation/AudioPlayer.razor.js");

        await base.OnAfterRenderAsync(firstRender);

    }

}
